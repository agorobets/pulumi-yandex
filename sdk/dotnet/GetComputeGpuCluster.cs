// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    public static class GetComputeGpuCluster
    {
        /// <summary>
        /// Get information about a Yandex Compute GPU cluster. For more information, see [the official documentation](https://cloud.yandex.com/docs/compute/concepts/gpu-cluster).
        /// 
        /// ## Example Usage
        /// 
        /// {{ tffile "examples/compute_gpu_cluster/d_compute_gpu_cluster_1.tf" }}
        /// </summary>
        public static Task<GetComputeGpuClusterResult> InvokeAsync(GetComputeGpuClusterArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetComputeGpuClusterResult>("yandex:index/getComputeGpuCluster:getComputeGpuCluster", args ?? new GetComputeGpuClusterArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex Compute GPU cluster. For more information, see [the official documentation](https://cloud.yandex.com/docs/compute/concepts/gpu-cluster).
        /// 
        /// ## Example Usage
        /// 
        /// {{ tffile "examples/compute_gpu_cluster/d_compute_gpu_cluster_1.tf" }}
        /// </summary>
        public static Output<GetComputeGpuClusterResult> Invoke(GetComputeGpuClusterInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetComputeGpuClusterResult>("yandex:index/getComputeGpuCluster:getComputeGpuCluster", args ?? new GetComputeGpuClusterInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex Compute GPU cluster. For more information, see [the official documentation](https://cloud.yandex.com/docs/compute/concepts/gpu-cluster).
        /// 
        /// ## Example Usage
        /// 
        /// {{ tffile "examples/compute_gpu_cluster/d_compute_gpu_cluster_1.tf" }}
        /// </summary>
        public static Output<GetComputeGpuClusterResult> Invoke(GetComputeGpuClusterInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetComputeGpuClusterResult>("yandex:index/getComputeGpuCluster:getComputeGpuCluster", args ?? new GetComputeGpuClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetComputeGpuClusterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the folder that the GPU cluster belongs to.
        /// </summary>
        [Input("folderId")]
        public string? FolderId { get; set; }

        /// <summary>
        /// ID of the GPU cluster.
        /// </summary>
        [Input("gpuClusterId")]
        public string? GpuClusterId { get; set; }

        /// <summary>
        /// Name of the GPU cluster.
        /// 
        /// &gt; One of `gpu_cluster_id` or `name` should be specified.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        public GetComputeGpuClusterArgs()
        {
        }
        public static new GetComputeGpuClusterArgs Empty => new GetComputeGpuClusterArgs();
    }

    public sealed class GetComputeGpuClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the folder that the GPU cluster belongs to.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        /// <summary>
        /// ID of the GPU cluster.
        /// </summary>
        [Input("gpuClusterId")]
        public Input<string>? GpuClusterId { get; set; }

        /// <summary>
        /// Name of the GPU cluster.
        /// 
        /// &gt; One of `gpu_cluster_id` or `name` should be specified.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetComputeGpuClusterInvokeArgs()
        {
        }
        public static new GetComputeGpuClusterInvokeArgs Empty => new GetComputeGpuClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetComputeGpuClusterResult
    {
        /// <summary>
        /// Creation timestamp.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// Optional description of the GPU cluster.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// ID of the folder that the GPU cluster belongs to.
        /// </summary>
        public readonly string FolderId;
        public readonly string GpuClusterId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// type of interconnect used between nodes in GPU cluster.
        /// </summary>
        public readonly string InterconnectType;
        /// <summary>
        /// GPU cluster labels as `key:value` pairs. For details about the concept, see [documentation](https://cloud.yandex.com/docs/overview/concepts/services#labels).
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        public readonly string Name;
        /// <summary>
        /// Current status of the GPU cluster.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// ID of the zone where the GPU cluster resides.
        /// </summary>
        public readonly string Zone;

        [OutputConstructor]
        private GetComputeGpuClusterResult(
            string createdAt,

            string description,

            string folderId,

            string gpuClusterId,

            string id,

            string interconnectType,

            ImmutableDictionary<string, string> labels,

            string name,

            string status,

            string zone)
        {
            CreatedAt = createdAt;
            Description = description;
            FolderId = folderId;
            GpuClusterId = gpuClusterId;
            Id = id;
            InterconnectType = interconnectType;
            Labels = labels;
            Name = name;
            Status = status;
            Zone = zone;
        }
    }
}
