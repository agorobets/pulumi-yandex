// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    public static class GetMdbKafkaTopic
    {
        /// <summary>
        /// Get information about a topic of the Yandex Managed Kafka cluster. For more information, see [the official documentation](https://cloud.yandex.com/docs/managed-kafka/concepts).
        /// 
        /// ## Example Usage
        /// 
        /// {{ tffile "examples/mdb_kafka_topic/d_mdb_kafka_topic_1.tf" }}
        /// </summary>
        public static Task<GetMdbKafkaTopicResult> InvokeAsync(GetMdbKafkaTopicArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMdbKafkaTopicResult>("yandex:index/getMdbKafkaTopic:getMdbKafkaTopic", args ?? new GetMdbKafkaTopicArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a topic of the Yandex Managed Kafka cluster. For more information, see [the official documentation](https://cloud.yandex.com/docs/managed-kafka/concepts).
        /// 
        /// ## Example Usage
        /// 
        /// {{ tffile "examples/mdb_kafka_topic/d_mdb_kafka_topic_1.tf" }}
        /// </summary>
        public static Output<GetMdbKafkaTopicResult> Invoke(GetMdbKafkaTopicInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMdbKafkaTopicResult>("yandex:index/getMdbKafkaTopic:getMdbKafkaTopic", args ?? new GetMdbKafkaTopicInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a topic of the Yandex Managed Kafka cluster. For more information, see [the official documentation](https://cloud.yandex.com/docs/managed-kafka/concepts).
        /// 
        /// ## Example Usage
        /// 
        /// {{ tffile "examples/mdb_kafka_topic/d_mdb_kafka_topic_1.tf" }}
        /// </summary>
        public static Output<GetMdbKafkaTopicResult> Invoke(GetMdbKafkaTopicInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMdbKafkaTopicResult>("yandex:index/getMdbKafkaTopic:getMdbKafkaTopic", args ?? new GetMdbKafkaTopicInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMdbKafkaTopicArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Kafka cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public string ClusterId { get; set; } = null!;

        /// <summary>
        /// The name of the Kafka topic.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetMdbKafkaTopicArgs()
        {
        }
        public static new GetMdbKafkaTopicArgs Empty => new GetMdbKafkaTopicArgs();
    }

    public sealed class GetMdbKafkaTopicInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Kafka cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// The name of the Kafka topic.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetMdbKafkaTopicInvokeArgs()
        {
        }
        public static new GetMdbKafkaTopicInvokeArgs Empty => new GetMdbKafkaTopicInvokeArgs();
    }


    [OutputType]
    public sealed class GetMdbKafkaTopicResult
    {
        public readonly string ClusterId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        /// <summary>
        /// The number of the topic's partitions.
        /// </summary>
        public readonly int Partitions;
        /// <summary>
        /// Amount of data copies (replicas) for the topic in the cluster.
        /// </summary>
        public readonly int ReplicationFactor;
        /// <summary>
        /// User-defined settings for the topic. The structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMdbKafkaTopicTopicConfigResult> TopicConfigs;

        [OutputConstructor]
        private GetMdbKafkaTopicResult(
            string clusterId,

            string id,

            string name,

            int partitions,

            int replicationFactor,

            ImmutableArray<Outputs.GetMdbKafkaTopicTopicConfigResult> topicConfigs)
        {
            ClusterId = clusterId;
            Id = id;
            Name = name;
            Partitions = partitions;
            ReplicationFactor = replicationFactor;
            TopicConfigs = topicConfigs;
        }
    }
}
