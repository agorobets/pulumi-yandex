// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex.Outputs
{

    [OutputType]
    public sealed class GetMdbMysqlClusterHostResult
    {
        /// <summary>
        /// Sets whether the host should get a public IP address on creation. Changing this parameter for an existing host is not supported at the moment
        /// </summary>
        public readonly bool? AssignPublicIp;
        /// <summary>
        /// Host backup priority. Value is between 0 and 100, default is 0.
        /// </summary>
        public readonly int? BackupPriority;
        /// <summary>
        /// The fully qualified domain name of the host.
        /// </summary>
        public readonly string Fqdn;
        /// <summary>
        /// Host master promotion priority. Value is between 0 and 100, default is 0.
        /// </summary>
        public readonly int? Priority;
        /// <summary>
        /// Host replication source (fqdn), case when replication_source is empty then host in HA group.
        /// </summary>
        public readonly string ReplicationSource;
        /// <summary>
        /// The ID of the subnet, to which the host belongs. The subnet must be a part of the network to which the cluster belongs.
        /// </summary>
        public readonly string SubnetId;
        /// <summary>
        /// The availability zone where the MySQL host will be created.
        /// </summary>
        public readonly string Zone;

        [OutputConstructor]
        private GetMdbMysqlClusterHostResult(
            bool? assignPublicIp,

            int? backupPriority,

            string fqdn,

            int? priority,

            string replicationSource,

            string subnetId,

            string zone)
        {
            AssignPublicIp = assignPublicIp;
            BackupPriority = backupPriority;
            Fqdn = fqdn;
            Priority = priority;
            ReplicationSource = replicationSource;
            SubnetId = subnetId;
            Zone = zone;
        }
    }
}
