// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Yandex
{
    public static class GetComputeSnapshot
    {
        /// <summary>
        /// Get information about a Yandex Compute snapshot. For more information, see [the official documentation](https://cloud.yandex.com/docs/compute/concepts/snapshot).
        /// 
        /// ## Example Usage
        /// 
        /// {{ tffile "examples/compute_snapshot/d_compute_snapshot_1.tf" }}
        /// </summary>
        public static Task<GetComputeSnapshotResult> InvokeAsync(GetComputeSnapshotArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetComputeSnapshotResult>("yandex:index/getComputeSnapshot:getComputeSnapshot", args ?? new GetComputeSnapshotArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex Compute snapshot. For more information, see [the official documentation](https://cloud.yandex.com/docs/compute/concepts/snapshot).
        /// 
        /// ## Example Usage
        /// 
        /// {{ tffile "examples/compute_snapshot/d_compute_snapshot_1.tf" }}
        /// </summary>
        public static Output<GetComputeSnapshotResult> Invoke(GetComputeSnapshotInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetComputeSnapshotResult>("yandex:index/getComputeSnapshot:getComputeSnapshot", args ?? new GetComputeSnapshotInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Yandex Compute snapshot. For more information, see [the official documentation](https://cloud.yandex.com/docs/compute/concepts/snapshot).
        /// 
        /// ## Example Usage
        /// 
        /// {{ tffile "examples/compute_snapshot/d_compute_snapshot_1.tf" }}
        /// </summary>
        public static Output<GetComputeSnapshotResult> Invoke(GetComputeSnapshotInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetComputeSnapshotResult>("yandex:index/getComputeSnapshot:getComputeSnapshot", args ?? new GetComputeSnapshotInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetComputeSnapshotArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the folder that the snapshot belongs to.
        /// </summary>
        [Input("folderId")]
        public string? FolderId { get; set; }

        /// <summary>
        /// The name of the snapshot.
        /// 
        /// &gt; One of `snapshot_id` or `name` should be specified.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The ID of a specific snapshot.
        /// </summary>
        [Input("snapshotId")]
        public string? SnapshotId { get; set; }

        public GetComputeSnapshotArgs()
        {
        }
        public static new GetComputeSnapshotArgs Empty => new GetComputeSnapshotArgs();
    }

    public sealed class GetComputeSnapshotInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the folder that the snapshot belongs to.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        /// <summary>
        /// The name of the snapshot.
        /// 
        /// &gt; One of `snapshot_id` or `name` should be specified.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of a specific snapshot.
        /// </summary>
        [Input("snapshotId")]
        public Input<string>? SnapshotId { get; set; }

        public GetComputeSnapshotInvokeArgs()
        {
        }
        public static new GetComputeSnapshotInvokeArgs Empty => new GetComputeSnapshotInvokeArgs();
    }


    [OutputType]
    public sealed class GetComputeSnapshotResult
    {
        /// <summary>
        /// Snapshot creation timestamp.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// An optional description of this snapshot.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Minimum required size of the disk which is created from this snapshot.
        /// </summary>
        public readonly int DiskSize;
        /// <summary>
        /// ID of the folder that the snapshot belongs to.
        /// </summary>
        public readonly string FolderId;
        public readonly ImmutableArray<Outputs.GetComputeSnapshotHardwareGenerationResult> HardwareGenerations;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// ID of KMS symmetric key used to encrypt snapshot.
        /// </summary>
        public readonly string KmsKeyId;
        /// <summary>
        /// A map of labels applied to this snapshot.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        public readonly string Name;
        /// <summary>
        /// License IDs that indicate which licenses are attached to this snapshot.
        /// </summary>
        public readonly ImmutableArray<string> ProductIds;
        public readonly string SnapshotId;
        /// <summary>
        /// ID of the source disk.
        /// </summary>
        public readonly string SourceDiskId;
        /// <summary>
        /// The status of the snapshot.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The size of the snapshot, specified in Gb.
        /// </summary>
        public readonly int StorageSize;

        [OutputConstructor]
        private GetComputeSnapshotResult(
            string createdAt,

            string description,

            int diskSize,

            string folderId,

            ImmutableArray<Outputs.GetComputeSnapshotHardwareGenerationResult> hardwareGenerations,

            string id,

            string kmsKeyId,

            ImmutableDictionary<string, string> labels,

            string name,

            ImmutableArray<string> productIds,

            string snapshotId,

            string sourceDiskId,

            string status,

            int storageSize)
        {
            CreatedAt = createdAt;
            Description = description;
            DiskSize = diskSize;
            FolderId = folderId;
            HardwareGenerations = hardwareGenerations;
            Id = id;
            KmsKeyId = kmsKeyId;
            Labels = labels;
            Name = name;
            ProductIds = productIds;
            SnapshotId = snapshotId;
            SourceDiskId = sourceDiskId;
            Status = status;
            StorageSize = storageSize;
        }
    }
}
