// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/agorobets/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Generates an [IAM](https://cloud.yandex.com/docs/iam/) policy document that may be referenced by and applied to other Yandex Cloud Platform resources, such as the `ResourcemanagerFolder` resource.
//
// ## Example Usage
//
// {{ tffile "examples/iam_policy/d_iam_policy_1.tf" }}
//
// This data source is used to define [IAM](https://cloud.yandex.com/docs/iam/) policies to apply to other resources. Currently, defining a policy through a data source and referencing that policy from another resource is the only way to apply an IAM policy to a resource.
func GetIamPolicy(ctx *pulumi.Context, args *GetIamPolicyArgs, opts ...pulumi.InvokeOption) (*GetIamPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetIamPolicyResult
	err := ctx.Invoke("yandex:index/getIamPolicy:getIamPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIamPolicy.
type GetIamPolicyArgs struct {
	// A nested configuration block (described below) that defines a binding to be included in the policy document. Multiple `binding` arguments are supported.
	Bindings []GetIamPolicyBinding `pulumi:"bindings"`
}

// A collection of values returned by getIamPolicy.
type GetIamPolicyResult struct {
	Bindings []GetIamPolicyBinding `pulumi:"bindings"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The above bindings serialized in a format suitable for referencing from a resource that supports IAM.
	PolicyData string `pulumi:"policyData"`
}

func GetIamPolicyOutput(ctx *pulumi.Context, args GetIamPolicyOutputArgs, opts ...pulumi.InvokeOption) GetIamPolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetIamPolicyResultOutput, error) {
			args := v.(GetIamPolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getIamPolicy:getIamPolicy", args, GetIamPolicyResultOutput{}, options).(GetIamPolicyResultOutput), nil
		}).(GetIamPolicyResultOutput)
}

// A collection of arguments for invoking getIamPolicy.
type GetIamPolicyOutputArgs struct {
	// A nested configuration block (described below) that defines a binding to be included in the policy document. Multiple `binding` arguments are supported.
	Bindings GetIamPolicyBindingArrayInput `pulumi:"bindings"`
}

func (GetIamPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getIamPolicy.
type GetIamPolicyResultOutput struct{ *pulumi.OutputState }

func (GetIamPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamPolicyResult)(nil)).Elem()
}

func (o GetIamPolicyResultOutput) ToGetIamPolicyResultOutput() GetIamPolicyResultOutput {
	return o
}

func (o GetIamPolicyResultOutput) ToGetIamPolicyResultOutputWithContext(ctx context.Context) GetIamPolicyResultOutput {
	return o
}

func (o GetIamPolicyResultOutput) Bindings() GetIamPolicyBindingArrayOutput {
	return o.ApplyT(func(v GetIamPolicyResult) []GetIamPolicyBinding { return v.Bindings }).(GetIamPolicyBindingArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetIamPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// The above bindings serialized in a format suitable for referencing from a resource that supports IAM.
func (o GetIamPolicyResultOutput) PolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamPolicyResult) string { return v.PolicyData }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIamPolicyResultOutput{})
}
