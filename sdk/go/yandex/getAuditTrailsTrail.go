// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/agorobets/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a trail. For information about the trail concept, see [official documentation](https://yandex.cloud/docs/audit-trails/concepts/trail)
//
// ## Example Usage
//
// {{ tffile "examples/audit_trails_trail/d_audit_trails_trail_1.tf" }}
func LookupAuditTrailsTrail(ctx *pulumi.Context, args *LookupAuditTrailsTrailArgs, opts ...pulumi.InvokeOption) (*LookupAuditTrailsTrailResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAuditTrailsTrailResult
	err := ctx.Invoke("yandex:index/getAuditTrailsTrail:getAuditTrailsTrail", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAuditTrailsTrail.
type LookupAuditTrailsTrailArgs struct {
	// trail ID.
	TrailId string `pulumi:"trailId"`
}

// A collection of values returned by getAuditTrailsTrail.
type LookupAuditTrailsTrailResult struct {
	// Structure describing destination data stream of the trail. Mutually exclusive with `loggingDestination` and `storageDestination`.
	DataStreamDestinations []GetAuditTrailsTrailDataStreamDestination `pulumi:"dataStreamDestinations"`
	// (Optional) Description of the trail.
	Description string `pulumi:"description"`
	// (Optional) Structure describing event filtering process for the trail. Mutually exclusive with `filter`. At least one of the `managementEventsFilter` or `dataEventsFilter` fields will be filled.
	FilteringPolicies []GetAuditTrailsTrailFilteringPolicy `pulumi:"filteringPolicies"`
	// (Optional) Structure describing event filtering process for the trail. Deprecated. Use `filteringPolicy` instead. Mutually exclusive with `filteringPolicy`.
	//
	// Deprecated: Use filteringPolicy instead. This attribute will be removed
	Filters []GetAuditTrailsTrailFilter `pulumi:"filters"`
	// ID of the folder to which the trail belongs.
	FolderId string `pulumi:"folderId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Optional) Labels defined by the user.
	Labels map[string]string `pulumi:"labels"`
	// Structure describing destination log group of the trail. Mutually exclusive with `storageDestination` and `dataStreamDestination`.
	LoggingDestinations []GetAuditTrailsTrailLoggingDestination `pulumi:"loggingDestinations"`
	// Name of the trail.
	Name string `pulumi:"name"`
	// ID of the [IAM service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) that is used by the trail.
	ServiceAccountId string `pulumi:"serviceAccountId"`
	// Status of the trail.
	Status string `pulumi:"status"`
	// Structure describing destination bucket of the trail. Mutually exclusive with `loggingDestination` and `dataStreamDestination`.
	StorageDestinations []GetAuditTrailsTrailStorageDestination `pulumi:"storageDestinations"`
	TrailId             string                                  `pulumi:"trailId"`
}

func LookupAuditTrailsTrailOutput(ctx *pulumi.Context, args LookupAuditTrailsTrailOutputArgs, opts ...pulumi.InvokeOption) LookupAuditTrailsTrailResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAuditTrailsTrailResultOutput, error) {
			args := v.(LookupAuditTrailsTrailArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getAuditTrailsTrail:getAuditTrailsTrail", args, LookupAuditTrailsTrailResultOutput{}, options).(LookupAuditTrailsTrailResultOutput), nil
		}).(LookupAuditTrailsTrailResultOutput)
}

// A collection of arguments for invoking getAuditTrailsTrail.
type LookupAuditTrailsTrailOutputArgs struct {
	// trail ID.
	TrailId pulumi.StringInput `pulumi:"trailId"`
}

func (LookupAuditTrailsTrailOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAuditTrailsTrailArgs)(nil)).Elem()
}

// A collection of values returned by getAuditTrailsTrail.
type LookupAuditTrailsTrailResultOutput struct{ *pulumi.OutputState }

func (LookupAuditTrailsTrailResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAuditTrailsTrailResult)(nil)).Elem()
}

func (o LookupAuditTrailsTrailResultOutput) ToLookupAuditTrailsTrailResultOutput() LookupAuditTrailsTrailResultOutput {
	return o
}

func (o LookupAuditTrailsTrailResultOutput) ToLookupAuditTrailsTrailResultOutputWithContext(ctx context.Context) LookupAuditTrailsTrailResultOutput {
	return o
}

// Structure describing destination data stream of the trail. Mutually exclusive with `loggingDestination` and `storageDestination`.
func (o LookupAuditTrailsTrailResultOutput) DataStreamDestinations() GetAuditTrailsTrailDataStreamDestinationArrayOutput {
	return o.ApplyT(func(v LookupAuditTrailsTrailResult) []GetAuditTrailsTrailDataStreamDestination {
		return v.DataStreamDestinations
	}).(GetAuditTrailsTrailDataStreamDestinationArrayOutput)
}

// (Optional) Description of the trail.
func (o LookupAuditTrailsTrailResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditTrailsTrailResult) string { return v.Description }).(pulumi.StringOutput)
}

// (Optional) Structure describing event filtering process for the trail. Mutually exclusive with `filter`. At least one of the `managementEventsFilter` or `dataEventsFilter` fields will be filled.
func (o LookupAuditTrailsTrailResultOutput) FilteringPolicies() GetAuditTrailsTrailFilteringPolicyArrayOutput {
	return o.ApplyT(func(v LookupAuditTrailsTrailResult) []GetAuditTrailsTrailFilteringPolicy { return v.FilteringPolicies }).(GetAuditTrailsTrailFilteringPolicyArrayOutput)
}

// (Optional) Structure describing event filtering process for the trail. Deprecated. Use `filteringPolicy` instead. Mutually exclusive with `filteringPolicy`.
//
// Deprecated: Use filteringPolicy instead. This attribute will be removed
func (o LookupAuditTrailsTrailResultOutput) Filters() GetAuditTrailsTrailFilterArrayOutput {
	return o.ApplyT(func(v LookupAuditTrailsTrailResult) []GetAuditTrailsTrailFilter { return v.Filters }).(GetAuditTrailsTrailFilterArrayOutput)
}

// ID of the folder to which the trail belongs.
func (o LookupAuditTrailsTrailResultOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditTrailsTrailResult) string { return v.FolderId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAuditTrailsTrailResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditTrailsTrailResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Optional) Labels defined by the user.
func (o LookupAuditTrailsTrailResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAuditTrailsTrailResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Structure describing destination log group of the trail. Mutually exclusive with `storageDestination` and `dataStreamDestination`.
func (o LookupAuditTrailsTrailResultOutput) LoggingDestinations() GetAuditTrailsTrailLoggingDestinationArrayOutput {
	return o.ApplyT(func(v LookupAuditTrailsTrailResult) []GetAuditTrailsTrailLoggingDestination {
		return v.LoggingDestinations
	}).(GetAuditTrailsTrailLoggingDestinationArrayOutput)
}

// Name of the trail.
func (o LookupAuditTrailsTrailResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditTrailsTrailResult) string { return v.Name }).(pulumi.StringOutput)
}

// ID of the [IAM service account](https://yandex.cloud/docs/iam/concepts/users/service-accounts) that is used by the trail.
func (o LookupAuditTrailsTrailResultOutput) ServiceAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditTrailsTrailResult) string { return v.ServiceAccountId }).(pulumi.StringOutput)
}

// Status of the trail.
func (o LookupAuditTrailsTrailResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditTrailsTrailResult) string { return v.Status }).(pulumi.StringOutput)
}

// Structure describing destination bucket of the trail. Mutually exclusive with `loggingDestination` and `dataStreamDestination`.
func (o LookupAuditTrailsTrailResultOutput) StorageDestinations() GetAuditTrailsTrailStorageDestinationArrayOutput {
	return o.ApplyT(func(v LookupAuditTrailsTrailResult) []GetAuditTrailsTrailStorageDestination {
		return v.StorageDestinations
	}).(GetAuditTrailsTrailStorageDestinationArrayOutput)
}

func (o LookupAuditTrailsTrailResultOutput) TrailId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuditTrailsTrailResult) string { return v.TrailId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAuditTrailsTrailResultOutput{})
}
