// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"errors"
	"github.com/agorobets/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Yandex Data Processing cluster. For more information, see [the official documentation](https://cloud.yandex.com/docs/data-proc/).
//
// ## Example Usage
//
// {{ tffile "examples/dataproc_cluster/r_dataproc_cluster_1.tf" }}
//
// ## Import
//
// A cluster can be imported using the `id` of the resource, e.g.
//
// ```sh
// $ pulumi import yandex:index/dataprocCluster:DataprocCluster foo cluster_id
// ```
type DataprocCluster struct {
	pulumi.CustomResourceState

	// Name of the Object Storage bucket to use for Yandex Data Processing jobs. Yandex Data Processing Agent saves output of job driver's process to specified bucket. In order for this to work service account (specified by the `serviceAccountId` argument) should be given permission to create objects within this bucket.
	Bucket pulumi.StringPtrOutput `pulumi:"bucket"`
	// Configuration and resources for hosts that should be created with the cluster. The structure is documented below.
	ClusterConfig DataprocClusterClusterConfigOutput `pulumi:"clusterConfig"`
	// (Computed) The Yandex Data Processing cluster creation timestamp.
	// * `cluster_config.0.subcluster_spec.X.id` - (Computed) ID of the subcluster.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Inhibits deletion of the cluster. Can be either `true` or `false`.
	DeletionProtection pulumi.BoolOutput `pulumi:"deletionProtection"`
	// Description of the Yandex Data Processing cluster.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Deployment environment of the cluster. Can be either `PRESTABLE` or `PRODUCTION`. The default is `PRESTABLE`.
	Environment pulumi.StringPtrOutput `pulumi:"environment"`
	// ID of the folder to create a cluster in. If it is not provided, the default provider folder is used.
	FolderId pulumi.StringOutput `pulumi:"folderId"`
	// A list of host group IDs to place VMs of the cluster on.
	HostGroupIds pulumi.StringArrayOutput `pulumi:"hostGroupIds"`
	// A set of key/value label pairs to assign to the Yandex Data Processing cluster.
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// ID of the cloud logging group for cluster logs.
	LogGroupId pulumi.StringPtrOutput `pulumi:"logGroupId"`
	// Name of a specific Yandex Data Processing cluster.
	Name pulumi.StringOutput `pulumi:"name"`
	// A list of security group IDs that the cluster belongs to.
	SecurityGroupIds pulumi.StringArrayOutput `pulumi:"securityGroupIds"`
	// Service account to be used by the Yandex Data Processing agent to access resources of Yandex Cloud. Selected service account should have `mdb.dataproc.agent` role on the folder where the Yandex Data Processing cluster will be located.
	ServiceAccountId pulumi.StringOutput `pulumi:"serviceAccountId"`
	// Whether to enable UI Proxy feature.
	UiProxy pulumi.BoolPtrOutput `pulumi:"uiProxy"`
	// ID of the availability zone to create cluster in. If it is not provided, the default provider zone is used.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewDataprocCluster registers a new resource with the given unique name, arguments, and options.
func NewDataprocCluster(ctx *pulumi.Context,
	name string, args *DataprocClusterArgs, opts ...pulumi.ResourceOption) (*DataprocCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterConfig == nil {
		return nil, errors.New("invalid value for required argument 'ClusterConfig'")
	}
	if args.ServiceAccountId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceAccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DataprocCluster
	err := ctx.RegisterResource("yandex:index/dataprocCluster:DataprocCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataprocCluster gets an existing DataprocCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataprocCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataprocClusterState, opts ...pulumi.ResourceOption) (*DataprocCluster, error) {
	var resource DataprocCluster
	err := ctx.ReadResource("yandex:index/dataprocCluster:DataprocCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataprocCluster resources.
type dataprocClusterState struct {
	// Name of the Object Storage bucket to use for Yandex Data Processing jobs. Yandex Data Processing Agent saves output of job driver's process to specified bucket. In order for this to work service account (specified by the `serviceAccountId` argument) should be given permission to create objects within this bucket.
	Bucket *string `pulumi:"bucket"`
	// Configuration and resources for hosts that should be created with the cluster. The structure is documented below.
	ClusterConfig *DataprocClusterClusterConfig `pulumi:"clusterConfig"`
	// (Computed) The Yandex Data Processing cluster creation timestamp.
	// * `cluster_config.0.subcluster_spec.X.id` - (Computed) ID of the subcluster.
	CreatedAt *string `pulumi:"createdAt"`
	// Inhibits deletion of the cluster. Can be either `true` or `false`.
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// Description of the Yandex Data Processing cluster.
	Description *string `pulumi:"description"`
	// Deployment environment of the cluster. Can be either `PRESTABLE` or `PRODUCTION`. The default is `PRESTABLE`.
	Environment *string `pulumi:"environment"`
	// ID of the folder to create a cluster in. If it is not provided, the default provider folder is used.
	FolderId *string `pulumi:"folderId"`
	// A list of host group IDs to place VMs of the cluster on.
	HostGroupIds []string `pulumi:"hostGroupIds"`
	// A set of key/value label pairs to assign to the Yandex Data Processing cluster.
	Labels map[string]string `pulumi:"labels"`
	// ID of the cloud logging group for cluster logs.
	LogGroupId *string `pulumi:"logGroupId"`
	// Name of a specific Yandex Data Processing cluster.
	Name *string `pulumi:"name"`
	// A list of security group IDs that the cluster belongs to.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// Service account to be used by the Yandex Data Processing agent to access resources of Yandex Cloud. Selected service account should have `mdb.dataproc.agent` role on the folder where the Yandex Data Processing cluster will be located.
	ServiceAccountId *string `pulumi:"serviceAccountId"`
	// Whether to enable UI Proxy feature.
	UiProxy *bool `pulumi:"uiProxy"`
	// ID of the availability zone to create cluster in. If it is not provided, the default provider zone is used.
	ZoneId *string `pulumi:"zoneId"`
}

type DataprocClusterState struct {
	// Name of the Object Storage bucket to use for Yandex Data Processing jobs. Yandex Data Processing Agent saves output of job driver's process to specified bucket. In order for this to work service account (specified by the `serviceAccountId` argument) should be given permission to create objects within this bucket.
	Bucket pulumi.StringPtrInput
	// Configuration and resources for hosts that should be created with the cluster. The structure is documented below.
	ClusterConfig DataprocClusterClusterConfigPtrInput
	// (Computed) The Yandex Data Processing cluster creation timestamp.
	// * `cluster_config.0.subcluster_spec.X.id` - (Computed) ID of the subcluster.
	CreatedAt pulumi.StringPtrInput
	// Inhibits deletion of the cluster. Can be either `true` or `false`.
	DeletionProtection pulumi.BoolPtrInput
	// Description of the Yandex Data Processing cluster.
	Description pulumi.StringPtrInput
	// Deployment environment of the cluster. Can be either `PRESTABLE` or `PRODUCTION`. The default is `PRESTABLE`.
	Environment pulumi.StringPtrInput
	// ID of the folder to create a cluster in. If it is not provided, the default provider folder is used.
	FolderId pulumi.StringPtrInput
	// A list of host group IDs to place VMs of the cluster on.
	HostGroupIds pulumi.StringArrayInput
	// A set of key/value label pairs to assign to the Yandex Data Processing cluster.
	Labels pulumi.StringMapInput
	// ID of the cloud logging group for cluster logs.
	LogGroupId pulumi.StringPtrInput
	// Name of a specific Yandex Data Processing cluster.
	Name pulumi.StringPtrInput
	// A list of security group IDs that the cluster belongs to.
	SecurityGroupIds pulumi.StringArrayInput
	// Service account to be used by the Yandex Data Processing agent to access resources of Yandex Cloud. Selected service account should have `mdb.dataproc.agent` role on the folder where the Yandex Data Processing cluster will be located.
	ServiceAccountId pulumi.StringPtrInput
	// Whether to enable UI Proxy feature.
	UiProxy pulumi.BoolPtrInput
	// ID of the availability zone to create cluster in. If it is not provided, the default provider zone is used.
	ZoneId pulumi.StringPtrInput
}

func (DataprocClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataprocClusterState)(nil)).Elem()
}

type dataprocClusterArgs struct {
	// Name of the Object Storage bucket to use for Yandex Data Processing jobs. Yandex Data Processing Agent saves output of job driver's process to specified bucket. In order for this to work service account (specified by the `serviceAccountId` argument) should be given permission to create objects within this bucket.
	Bucket *string `pulumi:"bucket"`
	// Configuration and resources for hosts that should be created with the cluster. The structure is documented below.
	ClusterConfig DataprocClusterClusterConfig `pulumi:"clusterConfig"`
	// Inhibits deletion of the cluster. Can be either `true` or `false`.
	DeletionProtection *bool `pulumi:"deletionProtection"`
	// Description of the Yandex Data Processing cluster.
	Description *string `pulumi:"description"`
	// Deployment environment of the cluster. Can be either `PRESTABLE` or `PRODUCTION`. The default is `PRESTABLE`.
	Environment *string `pulumi:"environment"`
	// ID of the folder to create a cluster in. If it is not provided, the default provider folder is used.
	FolderId *string `pulumi:"folderId"`
	// A list of host group IDs to place VMs of the cluster on.
	HostGroupIds []string `pulumi:"hostGroupIds"`
	// A set of key/value label pairs to assign to the Yandex Data Processing cluster.
	Labels map[string]string `pulumi:"labels"`
	// ID of the cloud logging group for cluster logs.
	LogGroupId *string `pulumi:"logGroupId"`
	// Name of a specific Yandex Data Processing cluster.
	Name *string `pulumi:"name"`
	// A list of security group IDs that the cluster belongs to.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// Service account to be used by the Yandex Data Processing agent to access resources of Yandex Cloud. Selected service account should have `mdb.dataproc.agent` role on the folder where the Yandex Data Processing cluster will be located.
	ServiceAccountId string `pulumi:"serviceAccountId"`
	// Whether to enable UI Proxy feature.
	UiProxy *bool `pulumi:"uiProxy"`
	// ID of the availability zone to create cluster in. If it is not provided, the default provider zone is used.
	ZoneId *string `pulumi:"zoneId"`
}

// The set of arguments for constructing a DataprocCluster resource.
type DataprocClusterArgs struct {
	// Name of the Object Storage bucket to use for Yandex Data Processing jobs. Yandex Data Processing Agent saves output of job driver's process to specified bucket. In order for this to work service account (specified by the `serviceAccountId` argument) should be given permission to create objects within this bucket.
	Bucket pulumi.StringPtrInput
	// Configuration and resources for hosts that should be created with the cluster. The structure is documented below.
	ClusterConfig DataprocClusterClusterConfigInput
	// Inhibits deletion of the cluster. Can be either `true` or `false`.
	DeletionProtection pulumi.BoolPtrInput
	// Description of the Yandex Data Processing cluster.
	Description pulumi.StringPtrInput
	// Deployment environment of the cluster. Can be either `PRESTABLE` or `PRODUCTION`. The default is `PRESTABLE`.
	Environment pulumi.StringPtrInput
	// ID of the folder to create a cluster in. If it is not provided, the default provider folder is used.
	FolderId pulumi.StringPtrInput
	// A list of host group IDs to place VMs of the cluster on.
	HostGroupIds pulumi.StringArrayInput
	// A set of key/value label pairs to assign to the Yandex Data Processing cluster.
	Labels pulumi.StringMapInput
	// ID of the cloud logging group for cluster logs.
	LogGroupId pulumi.StringPtrInput
	// Name of a specific Yandex Data Processing cluster.
	Name pulumi.StringPtrInput
	// A list of security group IDs that the cluster belongs to.
	SecurityGroupIds pulumi.StringArrayInput
	// Service account to be used by the Yandex Data Processing agent to access resources of Yandex Cloud. Selected service account should have `mdb.dataproc.agent` role on the folder where the Yandex Data Processing cluster will be located.
	ServiceAccountId pulumi.StringInput
	// Whether to enable UI Proxy feature.
	UiProxy pulumi.BoolPtrInput
	// ID of the availability zone to create cluster in. If it is not provided, the default provider zone is used.
	ZoneId pulumi.StringPtrInput
}

func (DataprocClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataprocClusterArgs)(nil)).Elem()
}

type DataprocClusterInput interface {
	pulumi.Input

	ToDataprocClusterOutput() DataprocClusterOutput
	ToDataprocClusterOutputWithContext(ctx context.Context) DataprocClusterOutput
}

func (*DataprocCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**DataprocCluster)(nil)).Elem()
}

func (i *DataprocCluster) ToDataprocClusterOutput() DataprocClusterOutput {
	return i.ToDataprocClusterOutputWithContext(context.Background())
}

func (i *DataprocCluster) ToDataprocClusterOutputWithContext(ctx context.Context) DataprocClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataprocClusterOutput)
}

// DataprocClusterArrayInput is an input type that accepts DataprocClusterArray and DataprocClusterArrayOutput values.
// You can construct a concrete instance of `DataprocClusterArrayInput` via:
//
//	DataprocClusterArray{ DataprocClusterArgs{...} }
type DataprocClusterArrayInput interface {
	pulumi.Input

	ToDataprocClusterArrayOutput() DataprocClusterArrayOutput
	ToDataprocClusterArrayOutputWithContext(context.Context) DataprocClusterArrayOutput
}

type DataprocClusterArray []DataprocClusterInput

func (DataprocClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DataprocCluster)(nil)).Elem()
}

func (i DataprocClusterArray) ToDataprocClusterArrayOutput() DataprocClusterArrayOutput {
	return i.ToDataprocClusterArrayOutputWithContext(context.Background())
}

func (i DataprocClusterArray) ToDataprocClusterArrayOutputWithContext(ctx context.Context) DataprocClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataprocClusterArrayOutput)
}

// DataprocClusterMapInput is an input type that accepts DataprocClusterMap and DataprocClusterMapOutput values.
// You can construct a concrete instance of `DataprocClusterMapInput` via:
//
//	DataprocClusterMap{ "key": DataprocClusterArgs{...} }
type DataprocClusterMapInput interface {
	pulumi.Input

	ToDataprocClusterMapOutput() DataprocClusterMapOutput
	ToDataprocClusterMapOutputWithContext(context.Context) DataprocClusterMapOutput
}

type DataprocClusterMap map[string]DataprocClusterInput

func (DataprocClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DataprocCluster)(nil)).Elem()
}

func (i DataprocClusterMap) ToDataprocClusterMapOutput() DataprocClusterMapOutput {
	return i.ToDataprocClusterMapOutputWithContext(context.Background())
}

func (i DataprocClusterMap) ToDataprocClusterMapOutputWithContext(ctx context.Context) DataprocClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataprocClusterMapOutput)
}

type DataprocClusterOutput struct{ *pulumi.OutputState }

func (DataprocClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataprocCluster)(nil)).Elem()
}

func (o DataprocClusterOutput) ToDataprocClusterOutput() DataprocClusterOutput {
	return o
}

func (o DataprocClusterOutput) ToDataprocClusterOutputWithContext(ctx context.Context) DataprocClusterOutput {
	return o
}

// Name of the Object Storage bucket to use for Yandex Data Processing jobs. Yandex Data Processing Agent saves output of job driver's process to specified bucket. In order for this to work service account (specified by the `serviceAccountId` argument) should be given permission to create objects within this bucket.
func (o DataprocClusterOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataprocCluster) pulumi.StringPtrOutput { return v.Bucket }).(pulumi.StringPtrOutput)
}

// Configuration and resources for hosts that should be created with the cluster. The structure is documented below.
func (o DataprocClusterOutput) ClusterConfig() DataprocClusterClusterConfigOutput {
	return o.ApplyT(func(v *DataprocCluster) DataprocClusterClusterConfigOutput { return v.ClusterConfig }).(DataprocClusterClusterConfigOutput)
}

// (Computed) The Yandex Data Processing cluster creation timestamp.
// * `cluster_config.0.subcluster_spec.X.id` - (Computed) ID of the subcluster.
func (o DataprocClusterOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocCluster) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Inhibits deletion of the cluster. Can be either `true` or `false`.
func (o DataprocClusterOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v *DataprocCluster) pulumi.BoolOutput { return v.DeletionProtection }).(pulumi.BoolOutput)
}

// Description of the Yandex Data Processing cluster.
func (o DataprocClusterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataprocCluster) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Deployment environment of the cluster. Can be either `PRESTABLE` or `PRODUCTION`. The default is `PRESTABLE`.
func (o DataprocClusterOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataprocCluster) pulumi.StringPtrOutput { return v.Environment }).(pulumi.StringPtrOutput)
}

// ID of the folder to create a cluster in. If it is not provided, the default provider folder is used.
func (o DataprocClusterOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocCluster) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

// A list of host group IDs to place VMs of the cluster on.
func (o DataprocClusterOutput) HostGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataprocCluster) pulumi.StringArrayOutput { return v.HostGroupIds }).(pulumi.StringArrayOutput)
}

// A set of key/value label pairs to assign to the Yandex Data Processing cluster.
func (o DataprocClusterOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataprocCluster) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// ID of the cloud logging group for cluster logs.
func (o DataprocClusterOutput) LogGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataprocCluster) pulumi.StringPtrOutput { return v.LogGroupId }).(pulumi.StringPtrOutput)
}

// Name of a specific Yandex Data Processing cluster.
func (o DataprocClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocCluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A list of security group IDs that the cluster belongs to.
func (o DataprocClusterOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataprocCluster) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// Service account to be used by the Yandex Data Processing agent to access resources of Yandex Cloud. Selected service account should have `mdb.dataproc.agent` role on the folder where the Yandex Data Processing cluster will be located.
func (o DataprocClusterOutput) ServiceAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocCluster) pulumi.StringOutput { return v.ServiceAccountId }).(pulumi.StringOutput)
}

// Whether to enable UI Proxy feature.
func (o DataprocClusterOutput) UiProxy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataprocCluster) pulumi.BoolPtrOutput { return v.UiProxy }).(pulumi.BoolPtrOutput)
}

// ID of the availability zone to create cluster in. If it is not provided, the default provider zone is used.
func (o DataprocClusterOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataprocCluster) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

type DataprocClusterArrayOutput struct{ *pulumi.OutputState }

func (DataprocClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DataprocCluster)(nil)).Elem()
}

func (o DataprocClusterArrayOutput) ToDataprocClusterArrayOutput() DataprocClusterArrayOutput {
	return o
}

func (o DataprocClusterArrayOutput) ToDataprocClusterArrayOutputWithContext(ctx context.Context) DataprocClusterArrayOutput {
	return o
}

func (o DataprocClusterArrayOutput) Index(i pulumi.IntInput) DataprocClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DataprocCluster {
		return vs[0].([]*DataprocCluster)[vs[1].(int)]
	}).(DataprocClusterOutput)
}

type DataprocClusterMapOutput struct{ *pulumi.OutputState }

func (DataprocClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DataprocCluster)(nil)).Elem()
}

func (o DataprocClusterMapOutput) ToDataprocClusterMapOutput() DataprocClusterMapOutput {
	return o
}

func (o DataprocClusterMapOutput) ToDataprocClusterMapOutputWithContext(ctx context.Context) DataprocClusterMapOutput {
	return o
}

func (o DataprocClusterMapOutput) MapIndex(k pulumi.StringInput) DataprocClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DataprocCluster {
		return vs[0].(map[string]*DataprocCluster)[vs[1].(string)]
	}).(DataprocClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataprocClusterInput)(nil)).Elem(), &DataprocCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataprocClusterArrayInput)(nil)).Elem(), DataprocClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataprocClusterMapInput)(nil)).Elem(), DataprocClusterMap{})
	pulumi.RegisterOutputType(DataprocClusterOutput{})
	pulumi.RegisterOutputType(DataprocClusterArrayOutput{})
	pulumi.RegisterOutputType(DataprocClusterMapOutput{})
}
