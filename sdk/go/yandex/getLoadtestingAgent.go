// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/agorobets/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex Load Testing Agent.
//
// ## Example Usage
//
// {{ tffile "examples/loadtesting_agent/d_loadtesting_agent_1.tf" }}
func LookupLoadtestingAgent(ctx *pulumi.Context, args *LookupLoadtestingAgentArgs, opts ...pulumi.InvokeOption) (*LookupLoadtestingAgentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLoadtestingAgentResult
	err := ctx.Invoke("yandex:index/getLoadtestingAgent:getLoadtestingAgent", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLoadtestingAgent.
type LookupLoadtestingAgentArgs struct {
	// The ID of a specific load testing agent.
	AgentId string `pulumi:"agentId"`
	// The logging settings of the load testing agent. The structure is documented below.
	LogSettings *GetLoadtestingAgentLogSettings `pulumi:"logSettings"`
}

// A collection of values returned by getLoadtestingAgent.
type LookupLoadtestingAgentResult struct {
	AgentId string `pulumi:"agentId"`
	// The ID of Yandex Compute Instance running loadtesting agent.
	ComputeInstanceId string `pulumi:"computeInstanceId"`
	// The Compute Instance details. The structure is documented below.
	ComputeInstances []GetLoadtestingAgentComputeInstance `pulumi:"computeInstances"`
	// A description of the boot disk.
	Description string `pulumi:"description"`
	// The ID of the folder that the load testing agent belongs to.
	FolderId string `pulumi:"folderId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A map of labels applied to the load testing agent.
	Labels map[string]string `pulumi:"labels"`
	// The logging settings of the load testing agent. The structure is documented below.
	LogSettings *GetLoadtestingAgentLogSettings `pulumi:"logSettings"`
	// The name of the boot disk.
	Name string `pulumi:"name"`
}

func LookupLoadtestingAgentOutput(ctx *pulumi.Context, args LookupLoadtestingAgentOutputArgs, opts ...pulumi.InvokeOption) LookupLoadtestingAgentResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupLoadtestingAgentResultOutput, error) {
			args := v.(LookupLoadtestingAgentArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getLoadtestingAgent:getLoadtestingAgent", args, LookupLoadtestingAgentResultOutput{}, options).(LookupLoadtestingAgentResultOutput), nil
		}).(LookupLoadtestingAgentResultOutput)
}

// A collection of arguments for invoking getLoadtestingAgent.
type LookupLoadtestingAgentOutputArgs struct {
	// The ID of a specific load testing agent.
	AgentId pulumi.StringInput `pulumi:"agentId"`
	// The logging settings of the load testing agent. The structure is documented below.
	LogSettings GetLoadtestingAgentLogSettingsPtrInput `pulumi:"logSettings"`
}

func (LookupLoadtestingAgentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLoadtestingAgentArgs)(nil)).Elem()
}

// A collection of values returned by getLoadtestingAgent.
type LookupLoadtestingAgentResultOutput struct{ *pulumi.OutputState }

func (LookupLoadtestingAgentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLoadtestingAgentResult)(nil)).Elem()
}

func (o LookupLoadtestingAgentResultOutput) ToLookupLoadtestingAgentResultOutput() LookupLoadtestingAgentResultOutput {
	return o
}

func (o LookupLoadtestingAgentResultOutput) ToLookupLoadtestingAgentResultOutputWithContext(ctx context.Context) LookupLoadtestingAgentResultOutput {
	return o
}

func (o LookupLoadtestingAgentResultOutput) AgentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadtestingAgentResult) string { return v.AgentId }).(pulumi.StringOutput)
}

// The ID of Yandex Compute Instance running loadtesting agent.
func (o LookupLoadtestingAgentResultOutput) ComputeInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadtestingAgentResult) string { return v.ComputeInstanceId }).(pulumi.StringOutput)
}

// The Compute Instance details. The structure is documented below.
func (o LookupLoadtestingAgentResultOutput) ComputeInstances() GetLoadtestingAgentComputeInstanceArrayOutput {
	return o.ApplyT(func(v LookupLoadtestingAgentResult) []GetLoadtestingAgentComputeInstance { return v.ComputeInstances }).(GetLoadtestingAgentComputeInstanceArrayOutput)
}

// A description of the boot disk.
func (o LookupLoadtestingAgentResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadtestingAgentResult) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the folder that the load testing agent belongs to.
func (o LookupLoadtestingAgentResultOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadtestingAgentResult) string { return v.FolderId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupLoadtestingAgentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadtestingAgentResult) string { return v.Id }).(pulumi.StringOutput)
}

// A map of labels applied to the load testing agent.
func (o LookupLoadtestingAgentResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupLoadtestingAgentResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The logging settings of the load testing agent. The structure is documented below.
func (o LookupLoadtestingAgentResultOutput) LogSettings() GetLoadtestingAgentLogSettingsPtrOutput {
	return o.ApplyT(func(v LookupLoadtestingAgentResult) *GetLoadtestingAgentLogSettings { return v.LogSettings }).(GetLoadtestingAgentLogSettingsPtrOutput)
}

// The name of the boot disk.
func (o LookupLoadtestingAgentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadtestingAgentResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLoadtestingAgentResultOutput{})
}
