// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"errors"
	"github.com/agorobets/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Allows management of Yandex Cloud Serverless Containers.
//
// ## Example Usage
//
// {{ tffile "examples/serverless_container/r_serverless_container_1.tf" }}
//
// ### Serverless Container with Image Digest
//
// {{ tffile "examples/serverless_container/r_serverless_container_2.tf" }}
//
// ### Serverless Container with Mounted Object Storage Bucket
//
// {{ tffile "examples/serverless_container/r_serverless_container_3.tf" }}
type ServerlessContainer struct {
	pulumi.CustomResourceState

	// Concurrency of Yandex Cloud Serverless Container
	Concurrency pulumi.IntOutput `pulumi:"concurrency"`
	// Network access. If specified the revision will be attached to specified network
	// * `connectivity.0.network_id` - Network the revision will have access to
	Connectivity ServerlessContainerConnectivityPtrOutput `pulumi:"connectivity"`
	// Core fraction (**0...100**) of the Yandex Cloud Serverless Container
	CoreFraction pulumi.IntOutput    `pulumi:"coreFraction"`
	Cores        pulumi.IntPtrOutput `pulumi:"cores"`
	// Creation timestamp of the Yandex Cloud Serverless Container
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Description of the Yandex Cloud Serverless Container
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Execution timeout in seconds (**duration format**) for Yandex Cloud Serverless Container
	ExecutionTimeout pulumi.StringOutput `pulumi:"executionTimeout"`
	// Folder ID for the Yandex Cloud Serverless Container
	FolderId pulumi.StringOutput `pulumi:"folderId"`
	// Revision deployment image for Yandex Cloud Serverless Container
	// * `image.0.url` (Required) - URL of image that will be deployed as Yandex Cloud Serverless Container
	// * `image.0.work_dir` - Working directory for Yandex Cloud Serverless Container
	// * `image.0.digest` - Digest of image that will be deployed as Yandex Cloud Serverless Container. If presented, should be equal to digest that will be resolved at server side by URL. Container will be updated on digest change even if `image.0.url` stays the same. If field not specified then its value will be computed.
	// * `image.0.command` - List of commands for Yandex Cloud Serverless Container
	// * `image.0.args` - List of arguments for Yandex Cloud Serverless Container
	// * `image.0.environment` - A set of key/value environment variable pairs for Yandex Cloud Serverless Container. Each key must begin with a letter (A-Z, a-z).
	Image ServerlessContainerImageOutput `pulumi:"image"`
	// A set of key/value label pairs to assign to the Yandex Cloud Serverless Container
	Labels pulumi.StringMapOutput `pulumi:"labels"`
	// Options for logging from Yandex Cloud Serverless Container
	LogOptions ServerlessContainerLogOptionsPtrOutput `pulumi:"logOptions"`
	// Memory in megabytes (**aligned to 128MB**) for Yandex Cloud Serverless Container
	Memory pulumi.IntOutput `pulumi:"memory"`
	// Mounts for Yandex Cloud Serverless Container
	// * `mounts.0.mount_point_path` - (Required) Path inside the container to access the directory in which the target is mounted
	// * `mounts.0.mode` - Mount’s accessibility mode. Valid values are `ro` and `rw`
	// * `mounts.0.ephemeral_disk` - One of the available mount types. Disk available during the function execution time
	// * `mounts.0.ephemeral_disk.0.size_gb` - (Required) Size of the ephemeral disk in GB
	// * `mounts.0.ephemeral_disk.0.block_size_kb` - Optional block size of the ephemeral disk in KB
	// * `mounts.0.object_storage` - One of the available mount types. Object storage as a mount
	// * `mounts.0.object_storage.0.bucket` - (Required) Name of the mounting bucket
	// * `mounts.0.object_storage.0.prefix` - Prefix within the bucket. If you leave this field empty, the entire bucket will be mounted
	Mounts ServerlessContainerMountArrayOutput `pulumi:"mounts"`
	// Yandex Cloud Serverless Container name
	Name pulumi.StringOutput `pulumi:"name"`
	// Provision policy. If specified the revision will have prepared instances
	// * `provision_policy.0.min_instances` - Minimum number of prepared instances that are always ready to serve requests
	ProvisionPolicy ServerlessContainerProvisionPolicyPtrOutput `pulumi:"provisionPolicy"`
	// Last revision ID of the Yandex Cloud Serverless Container
	RevisionId pulumi.StringOutput `pulumi:"revisionId"`
	// Runtime for Yandex Cloud Serverless Container
	// * `runtime.0.type` - Type of the runtime for Yandex Cloud Serverless Container. Valid values are `http` and `task`
	Runtime ServerlessContainerRuntimeOutput `pulumi:"runtime"`
	// Secrets for Yandex Cloud Serverless Container
	Secrets ServerlessContainerSecretArrayOutput `pulumi:"secrets"`
	// Service account ID for Yandex Cloud Serverless Container
	ServiceAccountId pulumi.StringPtrOutput `pulumi:"serviceAccountId"`
	// Storage mounts for Yandex Cloud Serverless Container
	// * `storage_mounts.0.mount_point_path` - (Required) Path inside the container to access the directory in which the bucket is mounted
	// * `storage_mounts.0.bucket` - (Required) Name of the mounting bucket
	// * `storage_mounts.0.prefix` - Prefix within the bucket. If you leave this field empty, the entire bucket will be mounted
	// * `storage_mounts.0.read_only` - Mount the bucket in read-only mode
	//
	// Deprecated: The 'storage_mounts' field has been deprecated. Please use 'mounts' instead.
	StorageMounts ServerlessContainerStorageMountArrayOutput `pulumi:"storageMounts"`
	// Invoke URL for the Yandex Cloud Serverless Container
	Url pulumi.StringOutput `pulumi:"url"`
}

// NewServerlessContainer registers a new resource with the given unique name, arguments, and options.
func NewServerlessContainer(ctx *pulumi.Context,
	name string, args *ServerlessContainerArgs, opts ...pulumi.ResourceOption) (*ServerlessContainer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Image == nil {
		return nil, errors.New("invalid value for required argument 'Image'")
	}
	if args.Memory == nil {
		return nil, errors.New("invalid value for required argument 'Memory'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServerlessContainer
	err := ctx.RegisterResource("yandex:index/serverlessContainer:ServerlessContainer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServerlessContainer gets an existing ServerlessContainer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServerlessContainer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServerlessContainerState, opts ...pulumi.ResourceOption) (*ServerlessContainer, error) {
	var resource ServerlessContainer
	err := ctx.ReadResource("yandex:index/serverlessContainer:ServerlessContainer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServerlessContainer resources.
type serverlessContainerState struct {
	// Concurrency of Yandex Cloud Serverless Container
	Concurrency *int `pulumi:"concurrency"`
	// Network access. If specified the revision will be attached to specified network
	// * `connectivity.0.network_id` - Network the revision will have access to
	Connectivity *ServerlessContainerConnectivity `pulumi:"connectivity"`
	// Core fraction (**0...100**) of the Yandex Cloud Serverless Container
	CoreFraction *int `pulumi:"coreFraction"`
	Cores        *int `pulumi:"cores"`
	// Creation timestamp of the Yandex Cloud Serverless Container
	CreatedAt *string `pulumi:"createdAt"`
	// Description of the Yandex Cloud Serverless Container
	Description *string `pulumi:"description"`
	// Execution timeout in seconds (**duration format**) for Yandex Cloud Serverless Container
	ExecutionTimeout *string `pulumi:"executionTimeout"`
	// Folder ID for the Yandex Cloud Serverless Container
	FolderId *string `pulumi:"folderId"`
	// Revision deployment image for Yandex Cloud Serverless Container
	// * `image.0.url` (Required) - URL of image that will be deployed as Yandex Cloud Serverless Container
	// * `image.0.work_dir` - Working directory for Yandex Cloud Serverless Container
	// * `image.0.digest` - Digest of image that will be deployed as Yandex Cloud Serverless Container. If presented, should be equal to digest that will be resolved at server side by URL. Container will be updated on digest change even if `image.0.url` stays the same. If field not specified then its value will be computed.
	// * `image.0.command` - List of commands for Yandex Cloud Serverless Container
	// * `image.0.args` - List of arguments for Yandex Cloud Serverless Container
	// * `image.0.environment` - A set of key/value environment variable pairs for Yandex Cloud Serverless Container. Each key must begin with a letter (A-Z, a-z).
	Image *ServerlessContainerImage `pulumi:"image"`
	// A set of key/value label pairs to assign to the Yandex Cloud Serverless Container
	Labels map[string]string `pulumi:"labels"`
	// Options for logging from Yandex Cloud Serverless Container
	LogOptions *ServerlessContainerLogOptions `pulumi:"logOptions"`
	// Memory in megabytes (**aligned to 128MB**) for Yandex Cloud Serverless Container
	Memory *int `pulumi:"memory"`
	// Mounts for Yandex Cloud Serverless Container
	// * `mounts.0.mount_point_path` - (Required) Path inside the container to access the directory in which the target is mounted
	// * `mounts.0.mode` - Mount’s accessibility mode. Valid values are `ro` and `rw`
	// * `mounts.0.ephemeral_disk` - One of the available mount types. Disk available during the function execution time
	// * `mounts.0.ephemeral_disk.0.size_gb` - (Required) Size of the ephemeral disk in GB
	// * `mounts.0.ephemeral_disk.0.block_size_kb` - Optional block size of the ephemeral disk in KB
	// * `mounts.0.object_storage` - One of the available mount types. Object storage as a mount
	// * `mounts.0.object_storage.0.bucket` - (Required) Name of the mounting bucket
	// * `mounts.0.object_storage.0.prefix` - Prefix within the bucket. If you leave this field empty, the entire bucket will be mounted
	Mounts []ServerlessContainerMount `pulumi:"mounts"`
	// Yandex Cloud Serverless Container name
	Name *string `pulumi:"name"`
	// Provision policy. If specified the revision will have prepared instances
	// * `provision_policy.0.min_instances` - Minimum number of prepared instances that are always ready to serve requests
	ProvisionPolicy *ServerlessContainerProvisionPolicy `pulumi:"provisionPolicy"`
	// Last revision ID of the Yandex Cloud Serverless Container
	RevisionId *string `pulumi:"revisionId"`
	// Runtime for Yandex Cloud Serverless Container
	// * `runtime.0.type` - Type of the runtime for Yandex Cloud Serverless Container. Valid values are `http` and `task`
	Runtime *ServerlessContainerRuntime `pulumi:"runtime"`
	// Secrets for Yandex Cloud Serverless Container
	Secrets []ServerlessContainerSecret `pulumi:"secrets"`
	// Service account ID for Yandex Cloud Serverless Container
	ServiceAccountId *string `pulumi:"serviceAccountId"`
	// Storage mounts for Yandex Cloud Serverless Container
	// * `storage_mounts.0.mount_point_path` - (Required) Path inside the container to access the directory in which the bucket is mounted
	// * `storage_mounts.0.bucket` - (Required) Name of the mounting bucket
	// * `storage_mounts.0.prefix` - Prefix within the bucket. If you leave this field empty, the entire bucket will be mounted
	// * `storage_mounts.0.read_only` - Mount the bucket in read-only mode
	//
	// Deprecated: The 'storage_mounts' field has been deprecated. Please use 'mounts' instead.
	StorageMounts []ServerlessContainerStorageMount `pulumi:"storageMounts"`
	// Invoke URL for the Yandex Cloud Serverless Container
	Url *string `pulumi:"url"`
}

type ServerlessContainerState struct {
	// Concurrency of Yandex Cloud Serverless Container
	Concurrency pulumi.IntPtrInput
	// Network access. If specified the revision will be attached to specified network
	// * `connectivity.0.network_id` - Network the revision will have access to
	Connectivity ServerlessContainerConnectivityPtrInput
	// Core fraction (**0...100**) of the Yandex Cloud Serverless Container
	CoreFraction pulumi.IntPtrInput
	Cores        pulumi.IntPtrInput
	// Creation timestamp of the Yandex Cloud Serverless Container
	CreatedAt pulumi.StringPtrInput
	// Description of the Yandex Cloud Serverless Container
	Description pulumi.StringPtrInput
	// Execution timeout in seconds (**duration format**) for Yandex Cloud Serverless Container
	ExecutionTimeout pulumi.StringPtrInput
	// Folder ID for the Yandex Cloud Serverless Container
	FolderId pulumi.StringPtrInput
	// Revision deployment image for Yandex Cloud Serverless Container
	// * `image.0.url` (Required) - URL of image that will be deployed as Yandex Cloud Serverless Container
	// * `image.0.work_dir` - Working directory for Yandex Cloud Serverless Container
	// * `image.0.digest` - Digest of image that will be deployed as Yandex Cloud Serverless Container. If presented, should be equal to digest that will be resolved at server side by URL. Container will be updated on digest change even if `image.0.url` stays the same. If field not specified then its value will be computed.
	// * `image.0.command` - List of commands for Yandex Cloud Serverless Container
	// * `image.0.args` - List of arguments for Yandex Cloud Serverless Container
	// * `image.0.environment` - A set of key/value environment variable pairs for Yandex Cloud Serverless Container. Each key must begin with a letter (A-Z, a-z).
	Image ServerlessContainerImagePtrInput
	// A set of key/value label pairs to assign to the Yandex Cloud Serverless Container
	Labels pulumi.StringMapInput
	// Options for logging from Yandex Cloud Serverless Container
	LogOptions ServerlessContainerLogOptionsPtrInput
	// Memory in megabytes (**aligned to 128MB**) for Yandex Cloud Serverless Container
	Memory pulumi.IntPtrInput
	// Mounts for Yandex Cloud Serverless Container
	// * `mounts.0.mount_point_path` - (Required) Path inside the container to access the directory in which the target is mounted
	// * `mounts.0.mode` - Mount’s accessibility mode. Valid values are `ro` and `rw`
	// * `mounts.0.ephemeral_disk` - One of the available mount types. Disk available during the function execution time
	// * `mounts.0.ephemeral_disk.0.size_gb` - (Required) Size of the ephemeral disk in GB
	// * `mounts.0.ephemeral_disk.0.block_size_kb` - Optional block size of the ephemeral disk in KB
	// * `mounts.0.object_storage` - One of the available mount types. Object storage as a mount
	// * `mounts.0.object_storage.0.bucket` - (Required) Name of the mounting bucket
	// * `mounts.0.object_storage.0.prefix` - Prefix within the bucket. If you leave this field empty, the entire bucket will be mounted
	Mounts ServerlessContainerMountArrayInput
	// Yandex Cloud Serverless Container name
	Name pulumi.StringPtrInput
	// Provision policy. If specified the revision will have prepared instances
	// * `provision_policy.0.min_instances` - Minimum number of prepared instances that are always ready to serve requests
	ProvisionPolicy ServerlessContainerProvisionPolicyPtrInput
	// Last revision ID of the Yandex Cloud Serverless Container
	RevisionId pulumi.StringPtrInput
	// Runtime for Yandex Cloud Serverless Container
	// * `runtime.0.type` - Type of the runtime for Yandex Cloud Serverless Container. Valid values are `http` and `task`
	Runtime ServerlessContainerRuntimePtrInput
	// Secrets for Yandex Cloud Serverless Container
	Secrets ServerlessContainerSecretArrayInput
	// Service account ID for Yandex Cloud Serverless Container
	ServiceAccountId pulumi.StringPtrInput
	// Storage mounts for Yandex Cloud Serverless Container
	// * `storage_mounts.0.mount_point_path` - (Required) Path inside the container to access the directory in which the bucket is mounted
	// * `storage_mounts.0.bucket` - (Required) Name of the mounting bucket
	// * `storage_mounts.0.prefix` - Prefix within the bucket. If you leave this field empty, the entire bucket will be mounted
	// * `storage_mounts.0.read_only` - Mount the bucket in read-only mode
	//
	// Deprecated: The 'storage_mounts' field has been deprecated. Please use 'mounts' instead.
	StorageMounts ServerlessContainerStorageMountArrayInput
	// Invoke URL for the Yandex Cloud Serverless Container
	Url pulumi.StringPtrInput
}

func (ServerlessContainerState) ElementType() reflect.Type {
	return reflect.TypeOf((*serverlessContainerState)(nil)).Elem()
}

type serverlessContainerArgs struct {
	// Concurrency of Yandex Cloud Serverless Container
	Concurrency *int `pulumi:"concurrency"`
	// Network access. If specified the revision will be attached to specified network
	// * `connectivity.0.network_id` - Network the revision will have access to
	Connectivity *ServerlessContainerConnectivity `pulumi:"connectivity"`
	// Core fraction (**0...100**) of the Yandex Cloud Serverless Container
	CoreFraction *int `pulumi:"coreFraction"`
	Cores        *int `pulumi:"cores"`
	// Description of the Yandex Cloud Serverless Container
	Description *string `pulumi:"description"`
	// Execution timeout in seconds (**duration format**) for Yandex Cloud Serverless Container
	ExecutionTimeout *string `pulumi:"executionTimeout"`
	// Folder ID for the Yandex Cloud Serverless Container
	FolderId *string `pulumi:"folderId"`
	// Revision deployment image for Yandex Cloud Serverless Container
	// * `image.0.url` (Required) - URL of image that will be deployed as Yandex Cloud Serverless Container
	// * `image.0.work_dir` - Working directory for Yandex Cloud Serverless Container
	// * `image.0.digest` - Digest of image that will be deployed as Yandex Cloud Serverless Container. If presented, should be equal to digest that will be resolved at server side by URL. Container will be updated on digest change even if `image.0.url` stays the same. If field not specified then its value will be computed.
	// * `image.0.command` - List of commands for Yandex Cloud Serverless Container
	// * `image.0.args` - List of arguments for Yandex Cloud Serverless Container
	// * `image.0.environment` - A set of key/value environment variable pairs for Yandex Cloud Serverless Container. Each key must begin with a letter (A-Z, a-z).
	Image ServerlessContainerImage `pulumi:"image"`
	// A set of key/value label pairs to assign to the Yandex Cloud Serverless Container
	Labels map[string]string `pulumi:"labels"`
	// Options for logging from Yandex Cloud Serverless Container
	LogOptions *ServerlessContainerLogOptions `pulumi:"logOptions"`
	// Memory in megabytes (**aligned to 128MB**) for Yandex Cloud Serverless Container
	Memory int `pulumi:"memory"`
	// Mounts for Yandex Cloud Serverless Container
	// * `mounts.0.mount_point_path` - (Required) Path inside the container to access the directory in which the target is mounted
	// * `mounts.0.mode` - Mount’s accessibility mode. Valid values are `ro` and `rw`
	// * `mounts.0.ephemeral_disk` - One of the available mount types. Disk available during the function execution time
	// * `mounts.0.ephemeral_disk.0.size_gb` - (Required) Size of the ephemeral disk in GB
	// * `mounts.0.ephemeral_disk.0.block_size_kb` - Optional block size of the ephemeral disk in KB
	// * `mounts.0.object_storage` - One of the available mount types. Object storage as a mount
	// * `mounts.0.object_storage.0.bucket` - (Required) Name of the mounting bucket
	// * `mounts.0.object_storage.0.prefix` - Prefix within the bucket. If you leave this field empty, the entire bucket will be mounted
	Mounts []ServerlessContainerMount `pulumi:"mounts"`
	// Yandex Cloud Serverless Container name
	Name *string `pulumi:"name"`
	// Provision policy. If specified the revision will have prepared instances
	// * `provision_policy.0.min_instances` - Minimum number of prepared instances that are always ready to serve requests
	ProvisionPolicy *ServerlessContainerProvisionPolicy `pulumi:"provisionPolicy"`
	// Runtime for Yandex Cloud Serverless Container
	// * `runtime.0.type` - Type of the runtime for Yandex Cloud Serverless Container. Valid values are `http` and `task`
	Runtime *ServerlessContainerRuntime `pulumi:"runtime"`
	// Secrets for Yandex Cloud Serverless Container
	Secrets []ServerlessContainerSecret `pulumi:"secrets"`
	// Service account ID for Yandex Cloud Serverless Container
	ServiceAccountId *string `pulumi:"serviceAccountId"`
	// Storage mounts for Yandex Cloud Serverless Container
	// * `storage_mounts.0.mount_point_path` - (Required) Path inside the container to access the directory in which the bucket is mounted
	// * `storage_mounts.0.bucket` - (Required) Name of the mounting bucket
	// * `storage_mounts.0.prefix` - Prefix within the bucket. If you leave this field empty, the entire bucket will be mounted
	// * `storage_mounts.0.read_only` - Mount the bucket in read-only mode
	//
	// Deprecated: The 'storage_mounts' field has been deprecated. Please use 'mounts' instead.
	StorageMounts []ServerlessContainerStorageMount `pulumi:"storageMounts"`
}

// The set of arguments for constructing a ServerlessContainer resource.
type ServerlessContainerArgs struct {
	// Concurrency of Yandex Cloud Serverless Container
	Concurrency pulumi.IntPtrInput
	// Network access. If specified the revision will be attached to specified network
	// * `connectivity.0.network_id` - Network the revision will have access to
	Connectivity ServerlessContainerConnectivityPtrInput
	// Core fraction (**0...100**) of the Yandex Cloud Serverless Container
	CoreFraction pulumi.IntPtrInput
	Cores        pulumi.IntPtrInput
	// Description of the Yandex Cloud Serverless Container
	Description pulumi.StringPtrInput
	// Execution timeout in seconds (**duration format**) for Yandex Cloud Serverless Container
	ExecutionTimeout pulumi.StringPtrInput
	// Folder ID for the Yandex Cloud Serverless Container
	FolderId pulumi.StringPtrInput
	// Revision deployment image for Yandex Cloud Serverless Container
	// * `image.0.url` (Required) - URL of image that will be deployed as Yandex Cloud Serverless Container
	// * `image.0.work_dir` - Working directory for Yandex Cloud Serverless Container
	// * `image.0.digest` - Digest of image that will be deployed as Yandex Cloud Serverless Container. If presented, should be equal to digest that will be resolved at server side by URL. Container will be updated on digest change even if `image.0.url` stays the same. If field not specified then its value will be computed.
	// * `image.0.command` - List of commands for Yandex Cloud Serverless Container
	// * `image.0.args` - List of arguments for Yandex Cloud Serverless Container
	// * `image.0.environment` - A set of key/value environment variable pairs for Yandex Cloud Serverless Container. Each key must begin with a letter (A-Z, a-z).
	Image ServerlessContainerImageInput
	// A set of key/value label pairs to assign to the Yandex Cloud Serverless Container
	Labels pulumi.StringMapInput
	// Options for logging from Yandex Cloud Serverless Container
	LogOptions ServerlessContainerLogOptionsPtrInput
	// Memory in megabytes (**aligned to 128MB**) for Yandex Cloud Serverless Container
	Memory pulumi.IntInput
	// Mounts for Yandex Cloud Serverless Container
	// * `mounts.0.mount_point_path` - (Required) Path inside the container to access the directory in which the target is mounted
	// * `mounts.0.mode` - Mount’s accessibility mode. Valid values are `ro` and `rw`
	// * `mounts.0.ephemeral_disk` - One of the available mount types. Disk available during the function execution time
	// * `mounts.0.ephemeral_disk.0.size_gb` - (Required) Size of the ephemeral disk in GB
	// * `mounts.0.ephemeral_disk.0.block_size_kb` - Optional block size of the ephemeral disk in KB
	// * `mounts.0.object_storage` - One of the available mount types. Object storage as a mount
	// * `mounts.0.object_storage.0.bucket` - (Required) Name of the mounting bucket
	// * `mounts.0.object_storage.0.prefix` - Prefix within the bucket. If you leave this field empty, the entire bucket will be mounted
	Mounts ServerlessContainerMountArrayInput
	// Yandex Cloud Serverless Container name
	Name pulumi.StringPtrInput
	// Provision policy. If specified the revision will have prepared instances
	// * `provision_policy.0.min_instances` - Minimum number of prepared instances that are always ready to serve requests
	ProvisionPolicy ServerlessContainerProvisionPolicyPtrInput
	// Runtime for Yandex Cloud Serverless Container
	// * `runtime.0.type` - Type of the runtime for Yandex Cloud Serverless Container. Valid values are `http` and `task`
	Runtime ServerlessContainerRuntimePtrInput
	// Secrets for Yandex Cloud Serverless Container
	Secrets ServerlessContainerSecretArrayInput
	// Service account ID for Yandex Cloud Serverless Container
	ServiceAccountId pulumi.StringPtrInput
	// Storage mounts for Yandex Cloud Serverless Container
	// * `storage_mounts.0.mount_point_path` - (Required) Path inside the container to access the directory in which the bucket is mounted
	// * `storage_mounts.0.bucket` - (Required) Name of the mounting bucket
	// * `storage_mounts.0.prefix` - Prefix within the bucket. If you leave this field empty, the entire bucket will be mounted
	// * `storage_mounts.0.read_only` - Mount the bucket in read-only mode
	//
	// Deprecated: The 'storage_mounts' field has been deprecated. Please use 'mounts' instead.
	StorageMounts ServerlessContainerStorageMountArrayInput
}

func (ServerlessContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serverlessContainerArgs)(nil)).Elem()
}

type ServerlessContainerInput interface {
	pulumi.Input

	ToServerlessContainerOutput() ServerlessContainerOutput
	ToServerlessContainerOutputWithContext(ctx context.Context) ServerlessContainerOutput
}

func (*ServerlessContainer) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessContainer)(nil)).Elem()
}

func (i *ServerlessContainer) ToServerlessContainerOutput() ServerlessContainerOutput {
	return i.ToServerlessContainerOutputWithContext(context.Background())
}

func (i *ServerlessContainer) ToServerlessContainerOutputWithContext(ctx context.Context) ServerlessContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessContainerOutput)
}

// ServerlessContainerArrayInput is an input type that accepts ServerlessContainerArray and ServerlessContainerArrayOutput values.
// You can construct a concrete instance of `ServerlessContainerArrayInput` via:
//
//	ServerlessContainerArray{ ServerlessContainerArgs{...} }
type ServerlessContainerArrayInput interface {
	pulumi.Input

	ToServerlessContainerArrayOutput() ServerlessContainerArrayOutput
	ToServerlessContainerArrayOutputWithContext(context.Context) ServerlessContainerArrayOutput
}

type ServerlessContainerArray []ServerlessContainerInput

func (ServerlessContainerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServerlessContainer)(nil)).Elem()
}

func (i ServerlessContainerArray) ToServerlessContainerArrayOutput() ServerlessContainerArrayOutput {
	return i.ToServerlessContainerArrayOutputWithContext(context.Background())
}

func (i ServerlessContainerArray) ToServerlessContainerArrayOutputWithContext(ctx context.Context) ServerlessContainerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessContainerArrayOutput)
}

// ServerlessContainerMapInput is an input type that accepts ServerlessContainerMap and ServerlessContainerMapOutput values.
// You can construct a concrete instance of `ServerlessContainerMapInput` via:
//
//	ServerlessContainerMap{ "key": ServerlessContainerArgs{...} }
type ServerlessContainerMapInput interface {
	pulumi.Input

	ToServerlessContainerMapOutput() ServerlessContainerMapOutput
	ToServerlessContainerMapOutputWithContext(context.Context) ServerlessContainerMapOutput
}

type ServerlessContainerMap map[string]ServerlessContainerInput

func (ServerlessContainerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServerlessContainer)(nil)).Elem()
}

func (i ServerlessContainerMap) ToServerlessContainerMapOutput() ServerlessContainerMapOutput {
	return i.ToServerlessContainerMapOutputWithContext(context.Background())
}

func (i ServerlessContainerMap) ToServerlessContainerMapOutputWithContext(ctx context.Context) ServerlessContainerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessContainerMapOutput)
}

type ServerlessContainerOutput struct{ *pulumi.OutputState }

func (ServerlessContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessContainer)(nil)).Elem()
}

func (o ServerlessContainerOutput) ToServerlessContainerOutput() ServerlessContainerOutput {
	return o
}

func (o ServerlessContainerOutput) ToServerlessContainerOutputWithContext(ctx context.Context) ServerlessContainerOutput {
	return o
}

// Concurrency of Yandex Cloud Serverless Container
func (o ServerlessContainerOutput) Concurrency() pulumi.IntOutput {
	return o.ApplyT(func(v *ServerlessContainer) pulumi.IntOutput { return v.Concurrency }).(pulumi.IntOutput)
}

// Network access. If specified the revision will be attached to specified network
// * `connectivity.0.network_id` - Network the revision will have access to
func (o ServerlessContainerOutput) Connectivity() ServerlessContainerConnectivityPtrOutput {
	return o.ApplyT(func(v *ServerlessContainer) ServerlessContainerConnectivityPtrOutput { return v.Connectivity }).(ServerlessContainerConnectivityPtrOutput)
}

// Core fraction (**0...100**) of the Yandex Cloud Serverless Container
func (o ServerlessContainerOutput) CoreFraction() pulumi.IntOutput {
	return o.ApplyT(func(v *ServerlessContainer) pulumi.IntOutput { return v.CoreFraction }).(pulumi.IntOutput)
}

func (o ServerlessContainerOutput) Cores() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServerlessContainer) pulumi.IntPtrOutput { return v.Cores }).(pulumi.IntPtrOutput)
}

// Creation timestamp of the Yandex Cloud Serverless Container
func (o ServerlessContainerOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessContainer) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Description of the Yandex Cloud Serverless Container
func (o ServerlessContainerOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerlessContainer) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Execution timeout in seconds (**duration format**) for Yandex Cloud Serverless Container
func (o ServerlessContainerOutput) ExecutionTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessContainer) pulumi.StringOutput { return v.ExecutionTimeout }).(pulumi.StringOutput)
}

// Folder ID for the Yandex Cloud Serverless Container
func (o ServerlessContainerOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessContainer) pulumi.StringOutput { return v.FolderId }).(pulumi.StringOutput)
}

// Revision deployment image for Yandex Cloud Serverless Container
// * `image.0.url` (Required) - URL of image that will be deployed as Yandex Cloud Serverless Container
// * `image.0.work_dir` - Working directory for Yandex Cloud Serverless Container
// * `image.0.digest` - Digest of image that will be deployed as Yandex Cloud Serverless Container. If presented, should be equal to digest that will be resolved at server side by URL. Container will be updated on digest change even if `image.0.url` stays the same. If field not specified then its value will be computed.
// * `image.0.command` - List of commands for Yandex Cloud Serverless Container
// * `image.0.args` - List of arguments for Yandex Cloud Serverless Container
// * `image.0.environment` - A set of key/value environment variable pairs for Yandex Cloud Serverless Container. Each key must begin with a letter (A-Z, a-z).
func (o ServerlessContainerOutput) Image() ServerlessContainerImageOutput {
	return o.ApplyT(func(v *ServerlessContainer) ServerlessContainerImageOutput { return v.Image }).(ServerlessContainerImageOutput)
}

// A set of key/value label pairs to assign to the Yandex Cloud Serverless Container
func (o ServerlessContainerOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServerlessContainer) pulumi.StringMapOutput { return v.Labels }).(pulumi.StringMapOutput)
}

// Options for logging from Yandex Cloud Serverless Container
func (o ServerlessContainerOutput) LogOptions() ServerlessContainerLogOptionsPtrOutput {
	return o.ApplyT(func(v *ServerlessContainer) ServerlessContainerLogOptionsPtrOutput { return v.LogOptions }).(ServerlessContainerLogOptionsPtrOutput)
}

// Memory in megabytes (**aligned to 128MB**) for Yandex Cloud Serverless Container
func (o ServerlessContainerOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v *ServerlessContainer) pulumi.IntOutput { return v.Memory }).(pulumi.IntOutput)
}

// Mounts for Yandex Cloud Serverless Container
// * `mounts.0.mount_point_path` - (Required) Path inside the container to access the directory in which the target is mounted
// * `mounts.0.mode` - Mount’s accessibility mode. Valid values are `ro` and `rw`
// * `mounts.0.ephemeral_disk` - One of the available mount types. Disk available during the function execution time
// * `mounts.0.ephemeral_disk.0.size_gb` - (Required) Size of the ephemeral disk in GB
// * `mounts.0.ephemeral_disk.0.block_size_kb` - Optional block size of the ephemeral disk in KB
// * `mounts.0.object_storage` - One of the available mount types. Object storage as a mount
// * `mounts.0.object_storage.0.bucket` - (Required) Name of the mounting bucket
// * `mounts.0.object_storage.0.prefix` - Prefix within the bucket. If you leave this field empty, the entire bucket will be mounted
func (o ServerlessContainerOutput) Mounts() ServerlessContainerMountArrayOutput {
	return o.ApplyT(func(v *ServerlessContainer) ServerlessContainerMountArrayOutput { return v.Mounts }).(ServerlessContainerMountArrayOutput)
}

// Yandex Cloud Serverless Container name
func (o ServerlessContainerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessContainer) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Provision policy. If specified the revision will have prepared instances
// * `provision_policy.0.min_instances` - Minimum number of prepared instances that are always ready to serve requests
func (o ServerlessContainerOutput) ProvisionPolicy() ServerlessContainerProvisionPolicyPtrOutput {
	return o.ApplyT(func(v *ServerlessContainer) ServerlessContainerProvisionPolicyPtrOutput { return v.ProvisionPolicy }).(ServerlessContainerProvisionPolicyPtrOutput)
}

// Last revision ID of the Yandex Cloud Serverless Container
func (o ServerlessContainerOutput) RevisionId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessContainer) pulumi.StringOutput { return v.RevisionId }).(pulumi.StringOutput)
}

// Runtime for Yandex Cloud Serverless Container
// * `runtime.0.type` - Type of the runtime for Yandex Cloud Serverless Container. Valid values are `http` and `task`
func (o ServerlessContainerOutput) Runtime() ServerlessContainerRuntimeOutput {
	return o.ApplyT(func(v *ServerlessContainer) ServerlessContainerRuntimeOutput { return v.Runtime }).(ServerlessContainerRuntimeOutput)
}

// Secrets for Yandex Cloud Serverless Container
func (o ServerlessContainerOutput) Secrets() ServerlessContainerSecretArrayOutput {
	return o.ApplyT(func(v *ServerlessContainer) ServerlessContainerSecretArrayOutput { return v.Secrets }).(ServerlessContainerSecretArrayOutput)
}

// Service account ID for Yandex Cloud Serverless Container
func (o ServerlessContainerOutput) ServiceAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerlessContainer) pulumi.StringPtrOutput { return v.ServiceAccountId }).(pulumi.StringPtrOutput)
}

// Storage mounts for Yandex Cloud Serverless Container
// * `storage_mounts.0.mount_point_path` - (Required) Path inside the container to access the directory in which the bucket is mounted
// * `storage_mounts.0.bucket` - (Required) Name of the mounting bucket
// * `storage_mounts.0.prefix` - Prefix within the bucket. If you leave this field empty, the entire bucket will be mounted
// * `storage_mounts.0.read_only` - Mount the bucket in read-only mode
//
// Deprecated: The 'storage_mounts' field has been deprecated. Please use 'mounts' instead.
func (o ServerlessContainerOutput) StorageMounts() ServerlessContainerStorageMountArrayOutput {
	return o.ApplyT(func(v *ServerlessContainer) ServerlessContainerStorageMountArrayOutput { return v.StorageMounts }).(ServerlessContainerStorageMountArrayOutput)
}

// Invoke URL for the Yandex Cloud Serverless Container
func (o ServerlessContainerOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *ServerlessContainer) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

type ServerlessContainerArrayOutput struct{ *pulumi.OutputState }

func (ServerlessContainerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServerlessContainer)(nil)).Elem()
}

func (o ServerlessContainerArrayOutput) ToServerlessContainerArrayOutput() ServerlessContainerArrayOutput {
	return o
}

func (o ServerlessContainerArrayOutput) ToServerlessContainerArrayOutputWithContext(ctx context.Context) ServerlessContainerArrayOutput {
	return o
}

func (o ServerlessContainerArrayOutput) Index(i pulumi.IntInput) ServerlessContainerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServerlessContainer {
		return vs[0].([]*ServerlessContainer)[vs[1].(int)]
	}).(ServerlessContainerOutput)
}

type ServerlessContainerMapOutput struct{ *pulumi.OutputState }

func (ServerlessContainerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServerlessContainer)(nil)).Elem()
}

func (o ServerlessContainerMapOutput) ToServerlessContainerMapOutput() ServerlessContainerMapOutput {
	return o
}

func (o ServerlessContainerMapOutput) ToServerlessContainerMapOutputWithContext(ctx context.Context) ServerlessContainerMapOutput {
	return o
}

func (o ServerlessContainerMapOutput) MapIndex(k pulumi.StringInput) ServerlessContainerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServerlessContainer {
		return vs[0].(map[string]*ServerlessContainer)[vs[1].(string)]
	}).(ServerlessContainerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessContainerInput)(nil)).Elem(), &ServerlessContainer{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessContainerArrayInput)(nil)).Elem(), ServerlessContainerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessContainerMapInput)(nil)).Elem(), ServerlessContainerMap{})
	pulumi.RegisterOutputType(ServerlessContainerOutput{})
	pulumi.RegisterOutputType(ServerlessContainerArrayOutput{})
	pulumi.RegisterOutputType(ServerlessContainerMapOutput{})
}
