// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/agorobets/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about Yandex Cloud Lockbox secret. For more information, see [the official documentation](https://yandex.cloud/docs/lockbox/).
//
// ## Example Usage
//
// {{ tffile "examples/lockbox_secret/d_lockbox_secret_1.tf" }}
func LookupLockboxSecret(ctx *pulumi.Context, args *LookupLockboxSecretArgs, opts ...pulumi.InvokeOption) (*LookupLockboxSecretResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLockboxSecretResult
	err := ctx.Invoke("yandex:index/getLockboxSecret:getLockboxSecret", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLockboxSecret.
type LookupLockboxSecretArgs struct {
	// Folder that the secret belongs to. If value is omitted, the default provider folder is used.
	//
	// > One of `secretId` or `name` should be specified.
	FolderId *string `pulumi:"folderId"`
	// Name of the Lockbox secret.
	Name *string `pulumi:"name"`
	// The Yandex Cloud Lockbox secret ID.
	SecretId *string `pulumi:"secretId"`
}

// A collection of values returned by getLockboxSecret.
type LookupLockboxSecretResult struct {
	// The version creation timestamp.
	CreatedAt string `pulumi:"createdAt"`
	// Information about the current version of the Yandex Cloud Lockbox secret.
	CurrentVersions []GetLockboxSecretCurrentVersion `pulumi:"currentVersions"`
	// Whether the Yandex Cloud Lockbox secret is protected from deletion.
	DeletionProtection bool `pulumi:"deletionProtection"`
	// The version description.
	Description string `pulumi:"description"`
	// ID of the folder that the Yandex Cloud Lockbox secret belongs to.
	FolderId string `pulumi:"folderId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The KMS key used to encrypt the Yandex Cloud Lockbox secret (if an explicit key was used).
	KmsKeyId string `pulumi:"kmsKeyId"`
	// A set of key/value label pairs assigned to the Yandex Cloud Lockbox secret.
	Labels map[string]string `pulumi:"labels"`
	// The Yandex Cloud Lockbox secret name.
	Name string `pulumi:"name"`
	// Payload specification for password generation (if set).
	PasswordPayloadSpecifications []GetLockboxSecretPasswordPayloadSpecification `pulumi:"passwordPayloadSpecifications"`
	// The secret ID the version belongs to (it's the same as the `secretId` argument indicated above)
	SecretId *string `pulumi:"secretId"`
	// The version status.
	Status string `pulumi:"status"`
}

func LookupLockboxSecretOutput(ctx *pulumi.Context, args LookupLockboxSecretOutputArgs, opts ...pulumi.InvokeOption) LookupLockboxSecretResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupLockboxSecretResultOutput, error) {
			args := v.(LookupLockboxSecretArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getLockboxSecret:getLockboxSecret", args, LookupLockboxSecretResultOutput{}, options).(LookupLockboxSecretResultOutput), nil
		}).(LookupLockboxSecretResultOutput)
}

// A collection of arguments for invoking getLockboxSecret.
type LookupLockboxSecretOutputArgs struct {
	// Folder that the secret belongs to. If value is omitted, the default provider folder is used.
	//
	// > One of `secretId` or `name` should be specified.
	FolderId pulumi.StringPtrInput `pulumi:"folderId"`
	// Name of the Lockbox secret.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The Yandex Cloud Lockbox secret ID.
	SecretId pulumi.StringPtrInput `pulumi:"secretId"`
}

func (LookupLockboxSecretOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLockboxSecretArgs)(nil)).Elem()
}

// A collection of values returned by getLockboxSecret.
type LookupLockboxSecretResultOutput struct{ *pulumi.OutputState }

func (LookupLockboxSecretResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLockboxSecretResult)(nil)).Elem()
}

func (o LookupLockboxSecretResultOutput) ToLookupLockboxSecretResultOutput() LookupLockboxSecretResultOutput {
	return o
}

func (o LookupLockboxSecretResultOutput) ToLookupLockboxSecretResultOutputWithContext(ctx context.Context) LookupLockboxSecretResultOutput {
	return o
}

// The version creation timestamp.
func (o LookupLockboxSecretResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLockboxSecretResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Information about the current version of the Yandex Cloud Lockbox secret.
func (o LookupLockboxSecretResultOutput) CurrentVersions() GetLockboxSecretCurrentVersionArrayOutput {
	return o.ApplyT(func(v LookupLockboxSecretResult) []GetLockboxSecretCurrentVersion { return v.CurrentVersions }).(GetLockboxSecretCurrentVersionArrayOutput)
}

// Whether the Yandex Cloud Lockbox secret is protected from deletion.
func (o LookupLockboxSecretResultOutput) DeletionProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupLockboxSecretResult) bool { return v.DeletionProtection }).(pulumi.BoolOutput)
}

// The version description.
func (o LookupLockboxSecretResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLockboxSecretResult) string { return v.Description }).(pulumi.StringOutput)
}

// ID of the folder that the Yandex Cloud Lockbox secret belongs to.
func (o LookupLockboxSecretResultOutput) FolderId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLockboxSecretResult) string { return v.FolderId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupLockboxSecretResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLockboxSecretResult) string { return v.Id }).(pulumi.StringOutput)
}

// The KMS key used to encrypt the Yandex Cloud Lockbox secret (if an explicit key was used).
func (o LookupLockboxSecretResultOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLockboxSecretResult) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

// A set of key/value label pairs assigned to the Yandex Cloud Lockbox secret.
func (o LookupLockboxSecretResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupLockboxSecretResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The Yandex Cloud Lockbox secret name.
func (o LookupLockboxSecretResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLockboxSecretResult) string { return v.Name }).(pulumi.StringOutput)
}

// Payload specification for password generation (if set).
func (o LookupLockboxSecretResultOutput) PasswordPayloadSpecifications() GetLockboxSecretPasswordPayloadSpecificationArrayOutput {
	return o.ApplyT(func(v LookupLockboxSecretResult) []GetLockboxSecretPasswordPayloadSpecification {
		return v.PasswordPayloadSpecifications
	}).(GetLockboxSecretPasswordPayloadSpecificationArrayOutput)
}

// The secret ID the version belongs to (it's the same as the `secretId` argument indicated above)
func (o LookupLockboxSecretResultOutput) SecretId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLockboxSecretResult) *string { return v.SecretId }).(pulumi.StringPtrOutput)
}

// The version status.
func (o LookupLockboxSecretResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLockboxSecretResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLockboxSecretResultOutput{})
}
