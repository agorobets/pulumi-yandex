// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package yandex

import (
	"context"
	"reflect"

	"github.com/agorobets/pulumi-yandex/sdk/go/yandex/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Yandex IAM user account. For more information about accounts, see [Yandex Cloud IAM accounts](https://cloud.yandex.com/docs/iam/concepts/#accounts).
//
// ## Example Usage
//
// {{ tffile "examples/iam_user/d_iam_user_1.tf" }}
//
// This data source is used to define [IAM User](https://cloud.yandex.com/docs/iam/concepts/#passport) that can be used by other resources.
func GetIamUser(ctx *pulumi.Context, args *GetIamUserArgs, opts ...pulumi.InvokeOption) (*GetIamUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetIamUserResult
	err := ctx.Invoke("yandex:index/getIamUser:getIamUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIamUser.
type GetIamUserArgs struct {
	// Login name used to sign in to Yandex Passport.
	Login *string `pulumi:"login"`
	// User ID used to manage IAM access bindings.
	//
	// > Either `login` or `userId` must be specified.
	UserId *string `pulumi:"userId"`
}

// A collection of values returned by getIamUser.
type GetIamUserResult struct {
	// Email address of user account.
	DefaultEmail string `pulumi:"defaultEmail"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Login name of IAM user account.
	Login string `pulumi:"login"`
	// ID of IAM user account.
	UserId string `pulumi:"userId"`
}

func GetIamUserOutput(ctx *pulumi.Context, args GetIamUserOutputArgs, opts ...pulumi.InvokeOption) GetIamUserResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetIamUserResultOutput, error) {
			args := v.(GetIamUserArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("yandex:index/getIamUser:getIamUser", args, GetIamUserResultOutput{}, options).(GetIamUserResultOutput), nil
		}).(GetIamUserResultOutput)
}

// A collection of arguments for invoking getIamUser.
type GetIamUserOutputArgs struct {
	// Login name used to sign in to Yandex Passport.
	Login pulumi.StringPtrInput `pulumi:"login"`
	// User ID used to manage IAM access bindings.
	//
	// > Either `login` or `userId` must be specified.
	UserId pulumi.StringPtrInput `pulumi:"userId"`
}

func (GetIamUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamUserArgs)(nil)).Elem()
}

// A collection of values returned by getIamUser.
type GetIamUserResultOutput struct{ *pulumi.OutputState }

func (GetIamUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamUserResult)(nil)).Elem()
}

func (o GetIamUserResultOutput) ToGetIamUserResultOutput() GetIamUserResultOutput {
	return o
}

func (o GetIamUserResultOutput) ToGetIamUserResultOutputWithContext(ctx context.Context) GetIamUserResultOutput {
	return o
}

// Email address of user account.
func (o GetIamUserResultOutput) DefaultEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamUserResult) string { return v.DefaultEmail }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetIamUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamUserResult) string { return v.Id }).(pulumi.StringOutput)
}

// Login name of IAM user account.
func (o GetIamUserResultOutput) Login() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamUserResult) string { return v.Login }).(pulumi.StringOutput)
}

// ID of IAM user account.
func (o GetIamUserResultOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamUserResult) string { return v.UserId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIamUserResultOutput{})
}
